{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","getLargestTodoId","Math","max","preparedTodos","App","useState","setTodos","selectedUser","setSelectedUser","newTitle","setNewTitle","isTitleError","setIsTittleError","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08685f03.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId:number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getLargestTodoId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nexport const preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([...preparedTodos]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [isTitleError, setIsTittleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleSubmit = (event:React.FormEvent) => {\n    event.preventDefault();\n\n    setIsTittleError(!newTitle);\n    setIsUserError(!selectedUser);\n\n    if (newTitle && selectedUser) {\n      setNewTitle('');\n      setSelectedUser(0);\n\n      const newTodo = {\n        id: getLargestTodoId(todos) + 1,\n        title: newTitle,\n        userId: selectedUser,\n        completed: false,\n        user: getUserById(+selectedUser),\n      };\n\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const handleNewTitle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setIsTittleError(false);\n  };\n\n  const handleSelectedUser = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setIsUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={handleNewTitle}\n            />\n          </label>\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleSelectedUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}